# -*- coding: utf-8 -*-
"""bancosapp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZftL7qKlkxNAimQTF4tQpmGrIpw7Xx5n
"""

import streamlit as st
import yfinance as yf
import pandas as pd
from PIL import Image
import requests
from io import BytesIO
import time

# Dicionário com dados dos bancos
bancos = {
    'BBDC4.SA': {
        'empresa': 'Banco Bradesco',
        'ticket': 'BBDC4',
        'logo_path': 'logos/bradesco.png'
    },
    'BBAS3.SA': {
        'empresa': 'Banco do Brasil',
        'ticket': 'BBAS3',
        'logo_path': 'logos/bb.png'
    },
    'ITUB4.SA': {
        'empresa': 'Itaú Unibanco',
        'ticket': 'ITUB4',
        'logo_path': 'logos/itau.png'
    },
    'SANB11.SA': {
        'empresa': 'Banco Santander',
        'ticket': 'SANB11',
        'logo_path': 'logos/santander.png'
    }
}

def buscar_preco(ticker):
    try:
        stock = yf.Ticker(ticker)
        hist = stock.history(period="1d", interval="1m")
        if not hist.empty:
            return round(hist["Close"].iloc[-1], 2)
    except:
        pass
    return "N/A"

st.set_page_config(page_title="Preços em tempo real - Bancos", layout="wide")
st.title("📊 Preço em Tempo Real das Ações - Bancos B3")

refresh_interval = st.slider("⏱️ Atualizar a cada quantos segundos?", min_value=1, max_value=60, value=1)

# Cabeçalho da tabela com nova coluna "TENDÊNCIA"
col1, col2, col3, col4, col5 = st.columns([1.5, 3, 2, 2, 1])
with col1: st.markdown("**LOGO**")
with col2: st.markdown("**EMPRESA**")
with col3: st.markdown("**TICKET**")
with col4: st.markdown("**PREÇO DA AÇÃO (R$)**")
with col5: st.markdown("**TENDÊNCIA**")

# Dicionário para guardar o último preço conhecido
precos_anteriores = {ticker: None for ticker in bancos.keys()}

while True:
    for ticker, info in bancos.items():
        preco_atual = buscar_preco(ticker)
        preco_ant = precos_anteriores[ticker]

        # Decide o emoji de tendência
        if preco_ant is None or preco_atual == "N/A" or preco_ant == "N/A":
            tendencia = ""
        elif preco_atual > preco_ant:
            tendencia = "🔺"
        elif preco_atual < preco_ant:
            tendencia = "🔻"
        else:
            tendencia = "-"

# Exibe as colunas com os dados, alinhando verticalmente
        col1, col2, col3, col4, col5 = st.columns([1.5, 3, 2, 2, 1])
        with col1:
            st.image(info["logo_path"], width=100)
        with col2:
            st.markdown(f"<div style='display:flex; align-items:center; height:100%;'>{info['empresa']}</div>", unsafe_allow_html=True)
        with col3:
            st.markdown(f"<div style='display:flex; align-items:center; height:100%;'>{info['ticket']}</div>", unsafe_allow_html=True)
        with col4:
            st.markdown(f"<div style='display:flex; align-items:center; height:100%;'>R$ {preco_atual}</div>", unsafe_allow_html=True)
        with col5:
            st.markdown(f"<div style='display:flex; align-items:center; height:100%; font-size:24px;'>{tendencia}</div>", unsafe_allow_html=True)

    time.sleep(refresh_interval)
    st.experimental_rerun()  # reinicia o app para atualizar a tabela
